name: whole pipeline java project from install , build, test, deploy a java application
run-name: java pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-job:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup java 17 to run the code
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

  build-job:
    runs-on: ubuntu-latest
    needs: install-job
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup java 17 version to run the code
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build the maven skip test cases
        run: mvn clean package -DskipTests

      - name: list all the files in target directory
        run: ls -la target/

      - name: Upload Build artifacts as WAR
        uses: actions/upload-artifact@v4
        with:
          name: java-app-war
          path: target/welcome-message-1.0-SNAPSHOT.war


  test-job:
    runs-on: ubuntu-latest
    needs: build-job
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup java 17 version to run the code
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and run test cases with maven
        run: mvn clean verify

      - name: List the jacoco coverage report
        run: |
          ls -R target/site/jacoco || echo "No coverage report found"

      - name: Upload jacoco report as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
          
                    
  sonar-scan:
    name: sonar-scan
    runs-on: ubuntu-latest
    needs: test-job
    steps:
      - name: code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches in git not only the latest commit

      - name: setup jdk 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu' # Use Zulu OpenJDK distribution. this is one of alternative distribution
      
      ## this step caches the sonarqube scanner downloaded packages to speed up the workflow between each workflow runs and store
      ## all in  [ ~/.sonar/cache ] this path. for future runs it is easy instead of download again.
      - name: cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      ## caches all the Maven packages in the local maven repository [ ~/.m2 ]
      - name: Cache maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      ## here we downloading again the JaCoCo artifact report generated from previous Test step
      - name: Download the JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: jacoco-report

      - name: List all the content from Jacoco report
        run: ls -R jacoco-report

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ## the below command is to install the sonarscanner inside runner.
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  




            
